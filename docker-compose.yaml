services:
  api-gateway-service:
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      sql-server:
        condition: service_healthy

  auth-service:
    build:
      context: .
      dockerfile: AuthService/Dockerfile
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      sql-server:
        condition: service_healthy

  user-profile-service:
    build:
      context: .
      dockerfile: UserProfileService/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      sql-server:
        condition: service_healthy

  post-service:
    build:
      context: .
      dockerfile: PostService/Dockerfile
    ports:
      - "5003:80"
    environment:
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      sql-server:
        condition: service_healthy

  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "Str0ngPass123!"
      ACCEPT_EULA: "Y"
    healthcheck:
      test: /opt/mssql-tools18/bin/sqlcmd -C -S localhost -U sa -P "Str0ngPass123!" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    ports:
      - "1433:1433"

  adminer:
    image: adminer
    ports:
      - "8080:8080"
    depends_on:
      - sql-server

volumes:
  sql_data:
